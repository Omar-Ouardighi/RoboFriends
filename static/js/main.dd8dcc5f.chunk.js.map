{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","StrictMode","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredrobot","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"yOAgBeA,EAdF,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,KAAOC,EAAgB,EAAhBA,MAAQC,EAAQ,EAARA,GACzB,OACG,sBAAKC,UAAY,sDAAjB,UACI,qBAAKC,IAAK,SAASC,IAAG,+BAA0BH,EAA1B,mBACtB,gCACI,6BAAKF,IACL,kCAAKC,YCgBNK,EArBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEf,OACI,cAAC,IAAMC,WAAP,UAEID,EAAOE,KAAI,SAACC,EAAKC,GACb,OACI,cAAC,EAAD,CAEAT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHVU,SCIZC,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKX,UAAW,MAAhB,SACI,uBACAA,UAAW,oCACVY,KAAO,SACPC,YAAY,gBACZC,SAAWH,OCCTI,G,MARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAWC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACKJ,EAAMK,aCcJC,E,kDAhBX,WAAaN,GAAQ,IAAD,8BAChB,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHE,E,qDAMpB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAE7B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,yDAEJG,KAAKX,MAAMK,a,GAdEQ,aCoDbC,E,kDA9CX,aAAc,IAAD,8BACT,gBAYJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAZzC,EAAKZ,MAAQ,CACTnB,OAAS,GACT6B,YAAa,IAJR,E,qDAOb,WAAqB,IAAD,OAChBG,MAAO,8CACNC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAACxB,OAAQoC,S,oBAQ1C,WAAU,IAAD,EACyBb,KAAKJ,MAA5BnB,EADF,EACEA,OAAQ6B,EADV,EACUA,YACTQ,EAAgBrC,EAAOsC,QAAO,SAAAC,GAChC,OAAOA,EAAM9C,KAAK+C,cAAcC,SAASZ,EAAYW,kBAEzD,OAAKxC,EAAO0C,OAIJ,sBAAK9C,UAAU,KAAf,UACI,oBAAID,GAAG,QAAQC,UAAU,KAAzB,yBACA,cAAC,EAAD,CAAWW,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU3B,OAAQqC,WAR3B,6C,GAzBDZ,aCKHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.dd8dcc5f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name , email , id}) => {\r\n     return (\r\n        <div className = 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt= 'robots' src={`https://robohash.org/${id}?size=200x200`} />\r\n            <div>\r\n                <h1>{name}</h1>\r\n                <p> {email}</p>\r\n            </div>\r\n        </div>\r\n\r\n        \r\n     );\r\n}\r\n\r\nexport default Card","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    \r\n    return (\r\n        <React.StrictMode>\r\n          {\r\n            robots.map((user,i) => {\r\n                return ( \r\n                    <Card\r\n                    key = {i} \r\n                    id={robots[i].id} \r\n                    name={robots[i].name} \r\n                    email={robots[i].email} \r\n                    />\r\n                );\r\n         })\r\n        }\r\n            \r\n        </React.StrictMode>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react' ;\r\n\r\nconst SearchBox = ({searchField, searchChange}) => {\r\n    return (\r\n        <div className= 'pa2'>\r\n            <input\r\n            className= ' pa3 ba b--green bg-lightest-blue'\r\n             type = 'search'\r\n             placeholder='search robots'\r\n             onChange= {searchChange} />\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react'\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll' , border: '5px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n    componentDidCatch(error, info) {\r\n        this.setState({hasError: true})\r\n    }\r\n    render(){\r\n        if (this.state.hasError){\r\n            return <h1>Ooops. that's not good!</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\nexport default ErrorBoundary","import React, {Component} from 'react'\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox'\r\nimport './app.css'\r\nimport Scroll from '../components/scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n\r\nclass App extends Component  {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots : [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        fetch ('https://jsonplaceholder.typicode.com/users')\r\n        .then( response => response.json())\r\n        .then(users => this.setState({robots: users}))\r\n    }\r\n    \r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value})\r\n        \r\n        \r\n    }\r\n    render() {\r\n        const {robots, searchfield} = this.state\r\n        const filteredrobot = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n        if (!robots.length){\r\n            return <h1>Loading</h1>\r\n        }else{\r\n            return (\r\n                <div className='tc'>\r\n                    <h1 id='titre' className='f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundary>\r\n                            <CardList robots={filteredrobot}/>  \r\n                        </ErrorBoundary>                  \r\n                    </Scroll>\r\n                    \r\n                </div>\r\n            );\r\n\r\n        }\r\n        \r\n\r\n    }\r\n    \r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'tachyons'\n\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}